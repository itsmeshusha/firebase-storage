{"version":3,"sources":["components/PhotosPage/PhotosPage.module.css","components/Header/Signin/Signin.module.css","components/Header/Signout/Signout.module.css","redux/auth-reducer.ts","components/Header/Signin/Signin.tsx","components/Header/Signout/Signout.tsx","redux/app-reducer.ts","redux/photos-reducer.ts","components/UploadFile/UploadFile.tsx","components/Header/Header.tsx","components/PhotosPage/PhotosPage.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx","components/Header/Header.module.css","components/UploadFile/UploadFile.module.css"],"names":["module","exports","initialState","auth","authWithGoogleAC","type","Signin","dispatch","useDispatch","firebase","useFirebase","className","s","btn","onClick","login","provider","then","value","catch","e","Signout","logout","status","error","setStatusAC","photos","setPhotosAC","uploadPhotoAC","photo","UploadFile","useState","setUrl","handleUpload","image","arrFile","count","forEach","el","storage","ref","name","put","on","snapshot","console","log","child","getDownloadURL","url","length","getState","getFirebase","a","listAll","res","Promise","all","items","map","i","arr","mainBlock","item","style","display","multiple","onChange","target","files","Header","useSelector","state","app","header","LinearProgress","color","uid","PhotosPage","useEffect","src","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","firebaseReducer","firestore","firestoreReducer","action","middlewares","thunk","withExtraArgument","store","createStore","compose","applyMiddleware","window","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","databaseURL","measurementId","enablePersistence","database","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ba7e0bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"PhotosPage_mainBlock__tQYFH\",\"item\":\"PhotosPage_item__2kiXV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Signin_btn__1UJ3G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Signout_btn__3gIH9\"};","import {Dispatch} from \"redux\";\r\n\r\nconst initialState = {\r\n    auth: false\r\n}\r\n\r\nexport const authReducer = (state: InitialStateType  = initialState, action: ActionType): InitialStateType => {\r\n    switch(action.type) {\r\n        case \"AUTH/AUTH_WITH_GOOGLE\": {\r\n            return {\r\n                ...state,\r\n                auth: action.auth\r\n            }\r\n        }\r\n    }\r\n    return state\r\n}\r\n\r\n//AC\r\nexport const authWithGoogleAC = (auth: boolean) => ({type: \"AUTH/AUTH_WITH_GOOGLE\", auth})\r\n\r\n//thunks\r\n// export const signInTC = () => (dispatch: Dispatch, getState: any, {getFirebase}: any) => {\r\n//     const firebase = getFirebase();\r\n//     const provider = new firebase.auth.GoogleAuthProvider()\r\n//     firebase.auth().signInWithPopup(provider)\r\n//         .then((result: any) => {\r\n//             dispatch(authWithGoogleAC(result));\r\n//         })\r\n// }\r\n\r\n//types\r\ntype InitialStateType = typeof initialState\r\ntype ActionType = ReturnType<typeof authWithGoogleAC>","import React from 'react'\r\nimport s from './Signin.module.css'\r\nimport {useFirebase} from \"react-redux-firebase\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {authWithGoogleAC} from \"../../../redux/auth-reducer\";\r\n\r\nexport const Signin = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const firebase = useFirebase();\r\n\r\n    const signInWithGoogle = () => {\r\n        firebase\r\n            .login({\r\n                provider: \"google\",\r\n                type: \"redirect\",\r\n            })\r\n            .then((value: any) => {\r\n                dispatch(authWithGoogleAC(!!value));\r\n            })\r\n            .catch(e => {\r\n                dispatch(authWithGoogleAC(false));\r\n            });\r\n\r\n    };\r\n\r\n    return <div>\r\n        <button className={s.btn}  onClick={signInWithGoogle}>Sign In with Google</button>\r\n    </div>\r\n}","import React from 'react'\r\nimport s from './Signout.module.css'\r\nimport {useFirebase} from \"react-redux-firebase\";\r\nimport {authWithGoogleAC} from \"../../../redux/auth-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nexport const Signout = () => {\r\n    const firebase = useFirebase();\r\n    const dispatch = useDispatch();\r\n\r\n    const signOut = () => {\r\n        firebase\r\n            .logout().then(() => dispatch(authWithGoogleAC(false)))\r\n    };\r\n\r\n    return <div>\r\n        <button className={s.btn} onClick={signOut}>Sign Out</button>\r\n    </div>\r\n}","export type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\ntype InitialStateType = {\r\n    status: RequestStatusType,\r\n    error: string | null\r\n}\r\nconst initialState = {\r\n    status: 'idle' as RequestStatusType,\r\n    error: null\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-STATUS':\r\n            return {...state, status: action.status}\r\n        case 'APP/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setStatusAC = (status: RequestStatusType) => {\r\n    return {\r\n        type: 'APP/SET-STATUS',\r\n        status\r\n    } as const\r\n}\r\nexport const setErrorAC = (error: string | null) => {\r\n    return {\r\n        type: 'APP/SET-ERROR',\r\n        error\r\n    } as const\r\n}\r\ntype ActionsType = ReturnType<typeof setStatusAC>\r\n    | ReturnType<typeof setErrorAC>","import {Dispatch} from \"redux\";\r\nimport {AppRootStateType} from \"./store\";\r\nimport {setStatusAC} from \"./app-reducer\";\r\n\r\ntype InitialStateType = {\r\n    photos: Array<string>\r\n}\r\n\r\n\r\nconst initialState: InitialStateType = {\r\n    photos: []\r\n}\r\n\r\nexport const photosReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'PHOTOS/SET-PHOTOS':\r\n            return {...state, photos: action.photos}\r\n        case 'PHOTOS/UPLOAD-PHOTOS':\r\n            return {photos: [action.photo, ...state.photos]}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setPhotosAC = (photos: Array<string>) => {\r\n    return {\r\n        type: 'PHOTOS/SET-PHOTOS',\r\n        photos\r\n    } as const\r\n}\r\nexport const uploadPhotoAC = (photo: any) => {\r\n    return {\r\n        type: 'PHOTOS/UPLOAD-PHOTOS',\r\n        photo\r\n    } as const\r\n}\r\n\r\ntype ActionsType = ReturnType<typeof setPhotosAC | typeof uploadPhotoAC>\r\n\r\n\r\nexport const getPhotosThunk = () => async (dispatch: Dispatch, getState: () => AppRootStateType, getFirebase: any) => {\r\n    dispatch(setStatusAC('loading'))\r\n    return getFirebase().storage().ref('images').listAll().then(async (res: any) => {\r\n        let arr = await Promise.all(res.items.map((i: any) => i.getDownloadURL()))\r\n        //@ts-ignore\r\n        dispatch(setPhotosAC(arr))\r\n        dispatch(setStatusAC('succeeded'))\r\n        }\r\n    );\r\n\r\n}\r\n\r\nexport const uploadPhotoTC = (photo: any) => async (dispatch: Dispatch, getState: () => AppRootStateType, getFirebase: any) => {\r\n\r\n    return getFirebase().storage().ref('images').listAll().then(async (res: any) => {\r\n        let arr = await Promise.all(res.items.map((i: any) => i.getDownloadURL()))\r\n        dispatch(uploadPhotoAC(photo))\r\n        //@ts-ignore\r\n        dispatch(setPhotosAC(arr))\r\n\r\n    })\r\n}","import React, {ChangeEvent, useRef, useState} from 'react';\r\nimport {storage} from \"../../index\";\r\nimport s from './UploadFile.module.css'\r\nimport {uploadPhotoTC} from \"../../redux/photos-reducer\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {setStatusAC} from \"../../redux/app-reducer\";\r\n\r\nexport const UploadFile = () => {\r\n\r\n    const [url, setUrl] = useState(\"\")\r\n    const dispatch = useDispatch()\r\n\r\n    // const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    //     if(e.target.files && e.target.files[0]) {\r\n    //         // @ts-ignore\r\n    //         handleUpload(e.target.files[0])\r\n    //     }\r\n    // }\r\n    //\r\n    // const handleUpload = (image:any) => {\r\n    //     dispatch(setStatusAC(\"loading\"))\r\n    //     console.log(image)\r\n    //     // @ts-ignore\r\n    //     const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n    //     uploadTask.on(\r\n    //         'state_changed',\r\n    //         snapshot => {},\r\n    //         error => {\r\n    //             console.log(error)\r\n    //         },\r\n    //         () => {\r\n    //             storage\r\n    //                 .ref('images')\r\n    //                 // @ts-ignore\r\n    //                 .child(image.name)\r\n    //                 .getDownloadURL()\r\n    //                 .then(url => {\r\n    //                     setUrl(url)\r\n    //                     dispatch(uploadPhotoTC(image))\r\n    //                 })\r\n    //         }\r\n    //     )\r\n    //\r\n    // }\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files) {\r\n            handleUpload(e.target.files)\r\n        }\r\n    }\r\n\r\n    const handleUpload = (image: any) => {\r\n        let arrFile = [...image]\r\n        let count = 0\r\n\r\n\r\n        arrFile.forEach((el: any) => {\r\n            debugger\r\n            dispatch(setStatusAC(\"loading\"))\r\n\r\n            const uploadTask = storage.ref(`images/${el.name}`).put(el)\r\n\r\n            uploadTask.on(\r\n                'state_changed',\r\n                snapshot => {\r\n                },\r\n                error => {\r\n                    console.log(error)\r\n                },\r\n                () => {\r\n                    storage\r\n                        .ref('images')\r\n                        // @ts-ignore\r\n                        .child(el.name)\r\n                        .getDownloadURL()\r\n                        .then(url => {\r\n                            debugger\r\n                            setUrl(url)\r\n                            dispatch(setStatusAC(\"succeeded\"))\r\n                            count = count + 1\r\n\r\n                            if (arrFile.length > count) {\r\n                                dispatch(setStatusAC(\"loading\"))\r\n                            }\r\n\r\n                            dispatch(uploadPhotoTC(el))\r\n                        })\r\n                }\r\n            )\r\n\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n    return <div className={s.mainBlock}>\r\n\r\n        <div className={s.item}>\r\n            <label>\r\n                <input type={'file'} style={{display: 'none'}} multiple onChange={handleChange}/>\r\n                <span className={s.btn}>Upload</span>\r\n            </label>\r\n\r\n        </div>\r\n\r\n    </div>\r\n}","import React from 'react'\r\nimport s from './Header.module.css'\r\nimport {Signin} from \"./Signin/Signin\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../redux/store\";\r\nimport {Signout} from \"./Signout/Signout\";\r\nimport {UploadFile} from \"../UploadFile/UploadFile\";\r\nimport {RequestStatusType} from \"../../redux/app-reducer\";\r\nimport {LinearProgress} from \"@material-ui/core\";\r\n\r\nexport const Header = () => {\r\n    const auth = useSelector((state: AppRootStateType) => state.firebase.auth)\r\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\r\n\r\n    return <div className={s.header}>\r\n        {status === 'loading' && <LinearProgress className=\"linearProgress\" color={\"primary\"}/>}\r\n        {auth && auth.uid\r\n            ? <div className={s.item}>\r\n                <Signout />\r\n            </div>\r\n            : <div className={s.item}>\r\n                <Signin/>\r\n            </div>\r\n        }\r\n        <div className={s.item}>\r\n            <UploadFile />\r\n        </div>\r\n\r\n\r\n    </div>\r\n}","import React, {useEffect,  useState} from 'react';\r\nimport s from './PhotosPage.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getPhotosThunk} from \"../../redux/photos-reducer\";\r\nimport {AppRootStateType} from \"../../redux/store\";\r\n\r\nexport const PhotosPage = () => {\r\n\r\n\r\n    const photos = useSelector<AppRootStateType, Array<string>>(state => state.photos.photos)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n            dispatch(getPhotosThunk())\r\n\r\n    }, []);\r\n\r\n    return <div className={s.mainBlock}>\r\n        <div className={s.item}>\r\n            {photos.map(el => <img src={el} key={el}/>)}\r\n        </div>\r\n    </div>\r\n}","import React from 'react';\nimport './App.css';\nimport {Header} from \"./components/Header/Header\";\nimport {LinearProgress} from \"@material-ui/core\";\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"./redux/store\";\nimport {isLoaded} from \"react-redux-firebase\";\nimport {UploadFile} from \"./components/UploadFile/UploadFile\";\nimport {PhotosPage} from \"./components/PhotosPage/PhotosPage\";\nimport {RequestStatusType} from \"./redux/app-reducer\";\n\n\nfunction App() {\n\n    const status = useSelector<AppRootStateType, RequestStatusType>(state => state.app.status)\n    // @ts-ignore\n    // function AuthIsLoaded({children}) {\n    //     const auth = useSelector<AppRootStateType>(state => state.firebase.auth)\n    //     if (!isLoaded(auth)) return <LinearProgress className=\"linearProgress\" color={\"primary\"}/>;\n    //     return children\n    // }\n\n    return (\n        // <AuthIsLoaded>\n\n            <div className=\"App\">\n                {status === 'loading' && <LinearProgress className=\"linearProgress\" color={\"primary\"}/>}\n                <Header/>\n                <PhotosPage />\n            </div>\n        // </AuthIsLoaded>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport {firebaseReducer} from \"react-redux-firebase\";\r\nimport {firestoreReducer} from \"redux-firestore\";\r\nimport {authReducer} from \"./auth-reducer\";\r\nimport {appReducer} from \"./app-reducer\";\r\nimport { getFirebase } from 'react-redux-firebase'\r\nimport {photosReducer} from \"./photos-reducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    photos: photosReducer,\r\n})\r\n\r\nconst middlewares = [\r\n    thunk.withExtraArgument(getFirebase)\r\n]\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    compose(\r\n        applyMiddleware(...middlewares),\r\n    ));\r\n//@ts-ignore\r\nwindow.store = store\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\nimport firebase from 'firebase';\nimport 'firebase/firestore'\nimport 'firebase/auth'\nimport {ReactReduxFirebaseProvider} from \"react-redux-firebase\";\nimport {createFirestoreInstance} from \"redux-firestore\";\n\nconst rrfConfig = {\n    userProfile: \"users\",\n    useFirestoreForProfile: true,\n};\n\nfirebase.initializeApp({\n    apiKey: \"AIzaSyB0xJ6ldu2hdTYMAxaXJPh4JqojcWQPPaA\",\n    authDomain: \"redux-firebase1.firebaseapp.com\",\n    projectId: \"redux-firebase1\",\n    storageBucket: \"redux-firebase1.appspot.com\",\n    messagingSenderId: \"541972609459\",\n    appId: \"1:541972609459:web:84c97c0025a541d265b3c6\",\n    databaseURL: \"https://redux-firebase1-default-rtdb.firebaseio.com\",\n    measurementId: \"G-40DHBB2EXX\"\n});\nfirebase.firestore();\nfirebase.firestore().enablePersistence();\n\n\n\nconst initialState = {};\n\nexport const storage = firebase.storage()\nexport const database = firebase.database()\n\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance, //since we are using Firestore\n};\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <ReactReduxFirebaseProvider {...rrfProps}>\n                <App/>\n            </ReactReduxFirebaseProvider>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1LVZC\",\"btn\":\"Header_btn__1fVh5\",\"item\":\"Header_item__z0a-2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"UploadFile_mainBlock__1m3cp\",\"item\":\"UploadFile_item__YSHhA\",\"btn\":\"UploadFile_btn__1AyUN\"};"],"sourceRoot":""}